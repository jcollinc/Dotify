{"ast":null,"code":"var _jsxFileName = \"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/playlist.js\";\nimport SongCard from \"./SongCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Playlist(_ref) {\n  let {\n    playlists,\n    userId,\n    playlistId,\n    currentPlaylistSongs\n  } = _ref;\n  const selectedPlaylist = playlists.find(playlist => playlist.id === playlistId);\n  const playlistSongs = currentPlaylistSongs === null || currentPlaylistSongs === void 0 ? void 0 : currentPlaylistSongs.map(song => {\n    return /*#__PURE__*/_jsxDEV(SongCard, {\n      song: song\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  });\n  console.log(currentPlaylistSongs);\n  console.log(playlistId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [playlistId ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selectedPlaylist.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"Songs\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 62\n    }, this), playlistSongs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Playlist;\nexport default Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/playlist.js"],"names":["SongCard","Playlist","playlists","userId","playlistId","currentPlaylistSongs","selectedPlaylist","find","playlist","id","playlistSongs","map","song","console","log","name"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,OAA0E;AAAA,MAAvD;AAACC,IAAAA,SAAD;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,GAAuD;AACtE,QAAMC,gBAAgB,GAAGJ,SAAS,CAACK,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,UAA3C,CAAzB;AAEA,QAAMM,aAAa,GAAGL,oBAAH,aAAGA,oBAAH,uBAAGA,oBAAoB,CAAEM,GAAtB,CAA2BC,IAAD,IAAU;AACtD,wBAAO,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFqB,CAAtB;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,oBAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACA,sBACI;AAAA,eACKA,UAAU,gBAAG;AAAA,gBAAKE,gBAAgB,CAACS;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADrD,EAEKL,aAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAdQT,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import SongCard from \"./SongCard\"\n\nfunction Playlist ({playlists, userId, playlistId, currentPlaylistSongs}) {\n    const selectedPlaylist = playlists.find(playlist => playlist.id === playlistId)\n    \n    const playlistSongs = currentPlaylistSongs?.map((song) => {\n        return <SongCard key={song.id} song={song}/>\n    })\n    console.log(currentPlaylistSongs)\n    console.log(playlistId)\n    return(\n        <div>\n            {playlistId?  <h1>{selectedPlaylist.name}</h1> : <h1>\"Songs\"</h1>}\n            {playlistSongs}\n        </div>\n    )\n}\n\nexport default Playlist"]},"metadata":{},"sourceType":"module"}