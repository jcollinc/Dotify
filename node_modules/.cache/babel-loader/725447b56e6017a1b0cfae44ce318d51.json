{"ast":null,"code":"var _jsxFileName = \"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport SongCard from './SongCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongList(_ref) {\n  _s();\n\n  let {\n    playlists,\n    userId\n  } = _ref;\n  const [allSongs, setAllSongs] = useState([]);\n  const [addToPlaylist, setAddToPlaylist] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:9292/songs`).then(r => r.json()).then(songs => setAllSongs(songs));\n  }, []);\n\n  const addSongToPlaylist = song => {\n    const playlistToAddTo = playlists.find(playlist => playlist.name === addToPlaylist);\n\n    if (playlistToAddTo === null) {\n      alert(\"Please select a playlist to add ${} to\");\n    }\n\n    const newPlaylistSong = {\n      playlist_id: playlistToAddTo.id,\n      song_id: song.id\n    };\n    fetch(`http://localhost:9292/users/${userId}/playlists/${playlistToAddTo.id}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPlaylistSong)\n    });\n  };\n\n  return allSongs.map(song => {\n    const handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"playlist\", addToPlaylist);\n      console.log(\"song\", song);\n      addSongToPlaylist(song);\n    };\n\n    const handlePlaylistChange = e => {\n      setAddToPlaylist(e.target.value);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SongCard, {\n        song: song\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"playlists\",\n          name: \"playlists\",\n          defaultValue: \"\",\n          onChange: handlePlaylistChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Add to playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), playlists.map(playlist => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: playlist.name,\n              children: playlist.name\n            }, playlist.name + playlist.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this);\n  });\n}\n\n_s(SongList, \"/LmAUATdr0d9Ui21V7Ej8Cero2Y=\");\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js"],"names":["useState","useEffect","SongCard","SongList","playlists","userId","allSongs","setAllSongs","addToPlaylist","setAddToPlaylist","fetch","then","r","json","songs","addSongToPlaylist","song","playlistToAddTo","find","playlist","name","alert","newPlaylistSong","playlist_id","id","song_id","method","headers","body","JSON","stringify","map","handleSubmit","e","preventDefault","console","log","handlePlaylistChange","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport SongCard from './SongCard'\n\nfunction SongList ({playlists, userId}) {\n\n    const [allSongs, setAllSongs] = useState([])\n    const [addToPlaylist, setAddToPlaylist] = useState()\n\n    useEffect (() => {\n        fetch(`http://localhost:9292/songs`)\n            .then(r => r.json())\n            .then(songs => setAllSongs(songs))\n    }, [])\n\n    const addSongToPlaylist = (song) =>{\n        const playlistToAddTo = playlists.find(playlist =>  playlist.name === addToPlaylist)\n        if (playlistToAddTo === null) {\n            alert(\"Please select a playlist to add ${} to\")\n        }\n        const newPlaylistSong = {\n            playlist_id: playlistToAddTo.id,\n            song_id: song.id\n        }\n\n        fetch(`http://localhost:9292/users/${userId}/playlists/${playlistToAddTo.id}`,{\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newPlaylistSong),\n        })\n    }\n\n    \n   \n    return(\n        allSongs.map(song => {\n\n            const handleSubmit = (e) =>{\n                e.preventDefault()\n                console.log(\"playlist\", addToPlaylist)\n                console.log(\"song\", song)\n                addSongToPlaylist(song)\n            }\n        \n            const handlePlaylistChange = (e) => {\n                setAddToPlaylist(e.target.value)\n            }\n\n            return(\n                <div>\n                    <SongCard key={song.id} song={song}/>\n                    <form onSubmit={handleSubmit}>\n                        <select id=\"playlists\" name=\"playlists\" defaultValue=\"\" onChange={handlePlaylistChange}>\n                            <option value=\"\" disabled selected>Add to playlist</option>\n                            {playlists.map((playlist)=>{\n                                return(\n                                    <option \n                                        key={playlist.name + playlist.id} \n                                        value={playlist.name}\n                                    >\n                                        {playlist.name}\n                                    </option>\n                                )\n                            })}\n                        </select>\n                        <input type=\"submit\" value=\"Add Song\"/>\n                    </form>\n                </div>\n            )\n        })\n    )\n}\n\nexport default SongList"]},"metadata":{},"sourceType":"module"}