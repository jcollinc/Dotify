{"ast":null,"code":"var _jsxFileName = \"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport SongCard from './SongCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongList(_ref) {\n  _s();\n\n  let {\n    playlists,\n    userId\n  } = _ref;\n  const [allSongs, setAllSongs] = useState([]);\n  const [addToPlaylist, setAddToPlaylist] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:9292/songs`).then(r => r.json()).then(songs => setAllSongs(songs));\n  }, []);\n\n  const addSongToPlaylist = song => {\n    const playlistToAddTo = playlists.find(playlist => playlist.name === addToPlaylist);\n\n    if (playlistToAddTo === null || playlistToAddTo === undefined) {\n      alert(`Please select a playlist to add this song to`);\n    } else {\n      const newPlaylistSong = {\n        playlist_id: playlistToAddTo.id,\n        song_id: song.id\n      };\n      fetch(`http://localhost:9292/users/${userId}/playlists/${playlistToAddTo.id}`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPlaylistSong)\n      });\n    }\n  };\n\n  return allSongs.map(song => {\n    const handleSubmit = e => {\n      e.preventDefault();\n      console.log(\"playlist\", addToPlaylist);\n      console.log(\"song\", song);\n      addSongToPlaylist(song);\n    };\n\n    const handlePlaylistChange = e => {\n      setAddToPlaylist(e.target.value);\n    };\n\n    const songForm = () => {};\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SongCard, {\n        song: song\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  });\n}\n\n_s(SongList, \"0yOmR1DZVKsAMAYvjQBBV8MqSH4=\");\n\n_c = SongList;\nexport default SongList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"sources":["/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js"],"names":["useState","useEffect","SongCard","SongList","playlists","userId","allSongs","setAllSongs","addToPlaylist","setAddToPlaylist","fetch","then","r","json","songs","addSongToPlaylist","song","playlistToAddTo","find","playlist","name","undefined","alert","newPlaylistSong","playlist_id","id","song_id","method","headers","body","JSON","stringify","map","handleSubmit","e","preventDefault","console","log","handlePlaylistChange","target","value","songForm"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,QAAT,OAAwC;AAAA;;AAAA,MAArB;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAqB;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,KAAK,CAAE,6BAAF,CAAL,CACKC,IADL,CACUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADf,EAEKF,IAFL,CAEUG,KAAK,IAAIP,WAAW,CAACO,KAAD,CAF9B;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,iBAAiB,GAAIC,IAAD,IAAS;AAC/B,UAAMC,eAAe,GAAGb,SAAS,CAACc,IAAV,CAAeC,QAAQ,IAAKA,QAAQ,CAACC,IAAT,KAAkBZ,aAA9C,CAAxB;;AACA,QAAIS,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAKI,SAApD,EAA+D;AAC3DC,MAAAA,KAAK,CAAE,8CAAF,CAAL;AACH,KAFD,MAGI;AACA,YAAMC,eAAe,GAAG;AACpBC,QAAAA,WAAW,EAAEP,eAAe,CAACQ,EADT;AAEpBC,QAAAA,OAAO,EAAEV,IAAI,CAACS;AAFM,OAAxB;AAKAf,MAAAA,KAAK,CAAE,+BAA8BL,MAAO,cAAaY,eAAe,CAACQ,EAAG,EAAvE,EAAyE;AAC1EE,QAAAA,MAAM,EAAE,MADkE;AAE1EC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFiE;AAG1EC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,eAAf;AAHoE,OAAzE,CAAL;AAKH;AACJ,GAjBD;;AAmBA,SACIjB,QAAQ,CAAC0B,GAAT,CAAahB,IAAI,IAAI;AAEjB,UAAMiB,YAAY,GAAIC,CAAD,IAAM;AACvBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB7B,aAAxB;AACA4B,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBrB,IAApB;AACAD,MAAAA,iBAAiB,CAACC,IAAD,CAAjB;AACH,KALD;;AAOA,UAAMsB,oBAAoB,GAAIJ,CAAD,IAAO;AAChCzB,MAAAA,gBAAgB,CAACyB,CAAC,CAACK,MAAF,CAASC,KAAV,CAAhB;AACH,KAFD;;AAIA,UAAMC,QAAQ,GAAG,MAAK,CAErB,CAFD;;AAIA,wBACI;AAAA,6BACI,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEzB;AAA9B,SAAeA,IAAI,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUT,IAAI,CAACS,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAvBD,CADJ;AA0BH;;GAxDQtB,Q;;KAAAA,Q;AA0DT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport SongCard from './SongCard'\n\nfunction SongList ({playlists, userId}) {\n\n    const [allSongs, setAllSongs] = useState([])\n    const [addToPlaylist, setAddToPlaylist] = useState(\"\")\n\n    useEffect (() => {\n        fetch(`http://localhost:9292/songs`)\n            .then(r => r.json())\n            .then(songs => setAllSongs(songs))\n    }, [])\n\n    const addSongToPlaylist = (song) =>{\n        const playlistToAddTo = playlists.find(playlist =>  playlist.name === addToPlaylist)\n        if (playlistToAddTo === null || playlistToAddTo === undefined) {\n            alert(`Please select a playlist to add this song to`)\n        }\n        else{\n            const newPlaylistSong = {\n                playlist_id: playlistToAddTo.id,\n                song_id: song.id\n            }\n\n            fetch(`http://localhost:9292/users/${userId}/playlists/${playlistToAddTo.id}`,{\n                method: \"POST\",\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify(newPlaylistSong),\n            })\n        }\n    }\n   \n    return(\n        allSongs.map(song => {\n\n            const handleSubmit = (e) =>{\n                e.preventDefault()\n                console.log(\"playlist\", addToPlaylist)\n                console.log(\"song\", song)\n                addSongToPlaylist(song)\n            }\n        \n            const handlePlaylistChange = (e) => {\n                setAddToPlaylist(e.target.value)\n            }\n\n            const songForm = () =>{\n\n            }\n\n            return(\n                <div key={song.id} >\n                    <SongCard key={song.id} song={song}/>\n                    \n                </div>\n            )\n        })\n    )\n}\n\nexport default SongList"]},"metadata":{},"sourceType":"module"}