{"ast":null,"code":"var _jsxFileName = \"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Sidebar.js\";\n// import { useEffect, useState } from \"react\"\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  let {\n    setPlaylists,\n    playlists,\n    setPlaylistId,\n    fetchPlaylistSongs,\n    setCurrentPlaylistSongs,\n    userId\n  } = _ref;\n\n  const onPlaylistClick = playlist => {\n    setPlaylistId(playlist.id);\n    fetchPlaylistSongs(playlist); // fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`)\n    // .then(resp => resp.json())\n    // .then(playlist => {\n    //     setCurrentPlaylistSongs(playlist)\n    //     console.log(\"current playlist songs\", playlist)\n    // })        \n  };\n\n  function handleNewPlaylistClick() {\n    let newPlaylist = {\n      name: `Playlist #${[playlists.length + 1]}`\n    };\n    fetch(`http://localhost:9292/users/${userId}/playlists`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPlaylist)\n    }).then(r => r.json()).then(newPlaylist => {\n      setPlaylists(playlists => [...playlists, newPlaylist]);\n      setPlaylistId(newPlaylist.id);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"Dotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/songs\",\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: handleNewPlaylistClick,\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), playlists.map(playlist => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/playlist/${playlist.id}`,\n        onClick: () => onPlaylistClick(playlist),\n        children: playlist.name\n      }, playlist.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Sidebar.js"],"names":["NavLink","Sidebar","setPlaylists","playlists","setPlaylistId","fetchPlaylistSongs","setCurrentPlaylistSongs","userId","onPlaylistClick","playlist","id","handleNewPlaylistClick","newPlaylist","name","length","fetch","method","headers","body","JSON","stringify","then","r","json","map"],"mappings":";AAAA;AACA,SAAQA,OAAR,QAAsB,kBAAtB;;;AAEA,SAASC,OAAT,OAA+G;AAAA,MAA9F;AAACC,IAAAA,YAAD;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,aAA1B;AAAyCC,IAAAA,kBAAzC;AAA6DC,IAAAA,uBAA7D;AAAsFC,IAAAA;AAAtF,GAA8F;;AAE3G,QAAMC,eAAe,GAAIC,QAAD,IAAa;AACjCL,IAAAA,aAAa,CAACK,QAAQ,CAACC,EAAV,CAAb;AACAL,IAAAA,kBAAkB,CAACI,QAAD,CAAlB,CAFiC,CAGjC;AACA;AACA;AACA;AACA;AACA;AACH,GATD;;AAWA,WAASE,sBAAT,GAAmC;AAC/B,QAAIC,WAAW,GAAG;AACdC,MAAAA,IAAI,EAAG,aAAY,CAACV,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAuB;AAD5B,KAAlB;AAGAC,IAAAA,KAAK,CAAE,+BAA8BR,MAAO,YAAvC,EAAoD;AACrDS,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF4C;AAGrDC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeR,WAAf;AAHgD,KAApD,CAAL,CAKCS,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMT,WAAW,IAAI;AACjBV,MAAAA,YAAY,CAACC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeS,WAAf,CAAd,CAAZ;AACAR,MAAAA,aAAa,CAACQ,WAAW,CAACF,EAAb,CAAb;AACH,KATD;AAUH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BAEI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAG,MAAA,OAAO,EAAEC,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EASKR,SAAS,CAACqB,GAAV,CAAef,QAAD,IAAY;AACvB,0BACI,QAAC,OAAD;AAEI,QAAA,EAAE,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAFjC;AAGI,QAAA,OAAO,EAAE,MAAMF,eAAe,CAACC,QAAD,CAHlC;AAAA,kBAKKA,QAAQ,CAACI;AALd,SACSJ,QAAQ,CAACI,IADlB;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KAtDQZ,O;AAwDT,eAAeA,OAAf","sourcesContent":["// import { useEffect, useState } from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nfunction Sidebar({setPlaylists, playlists, setPlaylistId, fetchPlaylistSongs, setCurrentPlaylistSongs, userId}){\n\n    const onPlaylistClick = (playlist) =>{\n        setPlaylistId(playlist.id)\n        fetchPlaylistSongs(playlist)\n        // fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`)\n        // .then(resp => resp.json())\n        // .then(playlist => {\n        //     setCurrentPlaylistSongs(playlist)\n        //     console.log(\"current playlist songs\", playlist)\n        // })        \n    }\n\n    function handleNewPlaylistClick () {\n        let newPlaylist = {\n            name: `Playlist #${[playlists.length + 1]}`     \n        }\n        fetch(`http://localhost:9292/users/${userId}/playlists`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body:JSON.stringify(newPlaylist)\n        })\n        .then(r => r.json())\n        .then(newPlaylist => {\n            setPlaylists(playlists => [...playlists, newPlaylist])\n            setPlaylistId(newPlaylist.id)\n        })\n    }\n            \n\n    return(\n        <div className=\"sidebar\">\n            \n            <NavLink to=\"/\">\n                Dotify\n            </NavLink>\n            <NavLink to=\"/songs\">\n                All Songs\n            </NavLink>\n            <p onClick={handleNewPlaylistClick}>Create Playlist</p>\n            {playlists.map((playlist)=>{\n                return(\n                    <NavLink \n                        key={playlist.name} \n                        to={`/playlist/${playlist.id}`} \n                        onClick={() => onPlaylistClick(playlist)}\n                    >\n                        {playlist.name}\n                    </NavLink>\n                )\n            })}\n        </div>\n    )\n\n}\n\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}