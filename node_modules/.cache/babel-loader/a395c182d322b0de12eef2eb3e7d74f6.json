{"ast":null,"code":"var _jsxFileName = \"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  _s();\n\n  let {\n    setCurrentPlaylist,\n    userId\n  } = _ref;\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:9292/users/${userId}/playlists`).then(resp => resp.json()).then(playlistData => {\n      setPlaylists(playlistData);\n    });\n  }, []);\n\n  const onPlaylistClick = playlist => {\n    fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`).then(resp => resp.json()).then(playlist => {\n      console.log(playlist);\n      setCurrentPlaylist(playlist);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"Dotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/songs\",\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), playlists.map(playlist => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/playlist/${playlist.id}`,\n        onClick: () => onPlaylistClick,\n        children: playlist.name\n      }, playlist.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"/7UASZ0pXGZcrJioajU839hHwfM=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/sidebar.js"],"names":["useEffect","useState","NavLink","Sidebar","setCurrentPlaylist","userId","playlists","setPlaylists","fetch","then","resp","json","playlistData","onPlaylistClick","playlist","id","console","log","map","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;;AAEA,SAASC,OAAT,OAA8C;AAAA;;AAAA,MAA7B;AAACC,IAAAA,kBAAD;AAAqBC,IAAAA;AAArB,GAA6B;AAE1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAAE,+BAA8BH,MAAO,YAAvC,CAAL,CACCI,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,YAAY,IAAI;AAClBL,MAAAA,YAAY,CAACK,YAAD,CAAZ;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMC,eAAe,GAAIC,QAAD,IAAa;AACjCN,IAAAA,KAAK,CAAE,+BAA8BH,MAAO,cAAaS,QAAQ,CAACC,EAAG,EAAhE,CAAL,CACCN,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMK,QAAQ,IAAI;AACdE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAV,MAAAA,kBAAkB,CAACU,QAAD,CAAlB;AAA6B,KAJjC;AAMH,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAOKR,SAAS,CAACY,GAAV,CAAeJ,QAAD,IAAY;AACvB,0BACI,QAAC,OAAD;AAA6B,QAAA,EAAE,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAA1D;AAA6D,QAAA,OAAO,EAAE,MAAMF,eAA5E;AAAA,kBACKC,QAAQ,CAACK;AADd,SAAcL,QAAQ,CAACK,IAAvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANA,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAxCQhB,O;;KAAAA,O;AA0CT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nfunction Sidebar({setCurrentPlaylist, userId}){\n\n    const [playlists, setPlaylists] = useState([])\n\n    useEffect(()=>{\n        fetch(`http://localhost:9292/users/${userId}/playlists`)\n        .then(resp => resp.json())\n        .then(playlistData => {\n            setPlaylists(playlistData)\n        })\n    },[])\n\n    const onPlaylistClick = (playlist) =>{\n        fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`)\n        .then(resp => resp.json())\n        .then(playlist => {\n            console.log(playlist)\n            setCurrentPlaylist(playlist)}\n        )        \n    }\n\n    return(\n        <div>\n            <NavLink to=\"/\">\n                Dotify\n            </NavLink>\n            <NavLink to=\"/songs\">\n                All Songs\n            </NavLink>\n            {playlists.map((playlist)=>{\n                return(\n                    <NavLink key={playlist.name} to={`/playlist/${playlist.id}`} onClick={() => onPlaylistClick}>\n                        {playlist.name}\n                    </NavLink>\n                )\n            }\n            )}\n        </div>\n    )\n\n}\n\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}