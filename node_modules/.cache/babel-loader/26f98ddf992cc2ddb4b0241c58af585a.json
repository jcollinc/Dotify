{"ast":null,"code":"var _jsxFileName = \"/home/jon/Development/code/phase-3/dotify/src/components/Sidebar.js\";\n// import { useEffect, useState } from \"react\"\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(_ref) {\n  let {\n    setPlaylists,\n    playlists,\n    setPlaylistId,\n    setCurrentPlaylistSongs,\n    userId\n  } = _ref;\n\n  const onPlaylistClick = playlist => {\n    setPlaylistId(playlist.id);\n    fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`).then(resp => resp.json()).then(playlist => {\n      setCurrentPlaylistSongs(playlist);\n      console.log(\"current playlist songs\", playlist);\n    });\n  };\n\n  function handleNewPlaylistClick() {\n    let newPlaylist = {\n      name: `Playlist #${[playlists.length + 1]}`\n    };\n    fetch(`http://localhost:9292/users/${userId}/playlists`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPlaylist)\n    }).then(r => r.json()).then(newPlaylist => setPlaylists(playlists => [...playlists, newPlaylist]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      children: \"Dotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/songs\",\n      children: \"All Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: handleNewPlaylistClick,\n      children: \"Create Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), playlists.map(playlist => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/playlist/${playlist.id}`,\n        onClick: () => onPlaylistClick(playlist),\n        children: playlist.name\n      }, playlist.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/jon/Development/code/phase-3/dotify/src/components/Sidebar.js"],"names":["NavLink","Sidebar","setPlaylists","playlists","setPlaylistId","setCurrentPlaylistSongs","userId","onPlaylistClick","playlist","id","fetch","then","resp","json","console","log","handleNewPlaylistClick","newPlaylist","name","length","method","headers","body","JSON","stringify","r","map"],"mappings":";AAAA;AACA,SAAQA,OAAR,QAAsB,kBAAtB;;;AAEA,SAASC,OAAT,OAA2F;AAAA,MAA1E;AAACC,IAAAA,YAAD;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,aAA1B;AAAyCC,IAAAA,uBAAzC;AAAkEC,IAAAA;AAAlE,GAA0E;;AAEvF,QAAMC,eAAe,GAAIC,QAAD,IAAa;AACjCJ,IAAAA,aAAa,CAACI,QAAQ,CAACC,EAAV,CAAb;AACAC,IAAAA,KAAK,CAAE,+BAA8BJ,MAAO,cAAaE,QAAQ,CAACC,EAAG,EAAhE,CAAL,CACCE,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMH,QAAQ,IAAI;AACdH,MAAAA,uBAAuB,CAACG,QAAD,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCP,QAAtC;AACH,KALD;AAMH,GARD;;AAUA,WAASQ,sBAAT,GAAmC;AAC/B,QAAIC,WAAW,GAAG;AACdC,MAAAA,IAAI,EAAG,aAAY,CAACf,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAuB;AAD5B,KAAlB;AAGAT,IAAAA,KAAK,CAAE,+BAA8BJ,MAAO,YAAvC,EAAoD;AACrDc,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAF4C;AAGrDC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeP,WAAf;AAHgD,KAApD,CAAL,CAKCN,IALD,CAKMc,CAAC,IAAIA,CAAC,CAACZ,IAAF,EALX,EAMCF,IAND,CAMMM,WAAW,IAAIf,YAAY,CAACC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAec,WAAf,CAAd,CANjC;AAOH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BAEI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAG,MAAA,OAAO,EAAED,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,EASKb,SAAS,CAACuB,GAAV,CAAelB,QAAD,IAAY;AACvB,0BACI,QAAC,OAAD;AAEI,QAAA,EAAE,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAFjC;AAGI,QAAA,OAAO,EAAE,MAAMF,eAAe,CAACC,QAAD,CAHlC;AAAA,kBAKKA,QAAQ,CAACU;AALd,SACSV,QAAQ,CAACU,IADlB;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAVA,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KAlDQjB,O;AAoDT,eAAeA,OAAf","sourcesContent":["// import { useEffect, useState } from \"react\"\nimport {NavLink} from \"react-router-dom\"\n\nfunction Sidebar({setPlaylists, playlists, setPlaylistId, setCurrentPlaylistSongs, userId}){\n\n    const onPlaylistClick = (playlist) =>{\n        setPlaylistId(playlist.id)\n        fetch(`http://localhost:9292/users/${userId}/playlists/${playlist.id}`)\n        .then(resp => resp.json())\n        .then(playlist => {\n            setCurrentPlaylistSongs(playlist)\n            console.log(\"current playlist songs\", playlist)\n        })        \n    }\n\n    function handleNewPlaylistClick () {\n        let newPlaylist = {\n            name: `Playlist #${[playlists.length + 1]}`     \n        }\n        fetch(`http://localhost:9292/users/${userId}/playlists`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body:JSON.stringify(newPlaylist)\n        })\n        .then(r => r.json())\n        .then(newPlaylist => setPlaylists(playlists => [...playlists, newPlaylist]))\n    }\n            \n\n    return(\n        <div className=\"sidebar\">\n            \n            <NavLink to=\"/\">\n                Dotify\n            </NavLink>\n            <NavLink to=\"/songs\">\n                All Songs\n            </NavLink>\n            <p onClick={handleNewPlaylistClick}>Create Playlist</p>\n            {playlists.map((playlist)=>{\n                return(\n                    <NavLink \n                        key={playlist.name} \n                        to={`/playlist/${playlist.id}`} \n                        onClick={() => onPlaylistClick(playlist)}\n                    >\n                        {playlist.name}\n                    </NavLink>\n                )\n            })}\n        </div>\n    )\n\n}\n\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}