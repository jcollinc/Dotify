[{"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/index.js":"1","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/App.js":"2","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Home.js":"3","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Sidebar.js":"4","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Playlist.js":"5","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js":"6","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongCard.js":"7","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Search.js":"8"},{"size":299,"mtime":1646921336091,"results":"9","hashOfConfig":"10"},{"size":2795,"mtime":1647008918428,"results":"11","hashOfConfig":"10"},{"size":637,"mtime":1647008918429,"results":"12","hashOfConfig":"10"},{"size":5992,"mtime":1647009546029,"results":"13","hashOfConfig":"10"},{"size":2415,"mtime":1647008918429,"results":"14","hashOfConfig":"10"},{"size":3417,"mtime":1647009529663,"results":"15","hashOfConfig":"10"},{"size":2101,"mtime":1647008918431,"results":"16","hashOfConfig":"10"},{"size":774,"mtime":1647008918430,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"k268o6",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/index.js",[],["37","38"],"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/App.js",[],"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Home.js",["39"],"import { useState, useEffect } from 'react'\n\nfunction Home({setSearchToAllSongs}){\n\n    const [user, setUser] = useState(\"\")\n\n    useEffect (() => {\n        setSearchToAllSongs(true)\n\n        fetch(\"http://localhost:9292/users/1\")\n            .then(r => r.json())\n            .then(user => setUser(user))\n    }, [])\n\nreturn(\n    <div className=\"home-page\">\n        <div className=\"dotify-title-div\">\n            <h1 className=\"dotify-title\">Dotify</h1>\n            <h1 className=\"title-dot\">.</h1>\n        </div>\n        <p className=\"welcome\">{user.user_name ? `Hello, ${user.user_name}.` : null}</p>\n    </div>\n)\n}\n\nexport default Home","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Sidebar.js",[],"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Playlist.js",["40"],"import SongCard from \"./SongCard\"\nimport { useEffect } from \"react\"\n\nfunction Playlist ({search, setSearchToAllSongs, setPlaylistId, playlists, userId, playlistId, currentPlaylistSongs, fetchPlaylistSongs, setVideoId, videoId}) {\n    \n    useEffect(() => setSearchToAllSongs(false), [])\n\n    const selectedPlaylist = playlists.find(playlist => playlist.id === playlistId)\n    const filteredSongs = currentPlaylistSongs?.filter((song) => {\n        return (\n\n            song.title.toUpperCase().includes(search.toUpperCase()) || \n            song.album.artist.name.toUpperCase().includes(search.toUpperCase()) || \n            song.album.title.toUpperCase().includes(search.toUpperCase())\n        )\n    })\n    const playlistSongs = filteredSongs?.map((song) => {\n        \n        const removeSong = () =>{\n            console.log(song)\n            fetch(`http://localhost:9292/users/${userId}/playlists/${selectedPlaylist.id}/${song.id}`,{\n                method: \"DELETE\",\n            })\n            .then(resp => resp.json())\n            .then(()=>{\n                setPlaylistId(selectedPlaylist.id)\n                fetchPlaylistSongs(selectedPlaylist)\n            })\n        }\n\n        return (\n            <div                    \n              key={`${song.id}`} \n            >\n                <SongCard \n                    song={song}\n                    setVideoId={setVideoId}\n                    videoId={videoId}\n                />\n                <button className=\"remove-song-from-playlist\" onClick={removeSong}>\n                    Remove from playlist\n                </button>\n            </div>\n        )\n    })\n        \n    return(\n        <div>\n            <div className=\"playlist-container\">\n                {playlistId ? \n                    <div className=\"playlist-header\">\n                        <h1>{selectedPlaylist.name}</h1>\n                        <h3>{`Playlist length: ${new Date(selectedPlaylist.duration * 1000).toISOString().substr(14, 5)}`}</h3>\n                        <p>{`Last update: ${selectedPlaylist.last_update.match(/\\d{4}-\\d{2}-\\d{2}/)}`}</p>\n                    </div>\n                : \n                    <div>\n                        <h1>Error</h1>\n                        <h3>Please try clicking on the playlist again</h3>\n                    </div>\n                }\n            {playlistSongs}\n            </div>\n        </div>\n    )\n}\n\nexport default Playlist","/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongList.js",["41"],"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/SongCard.js",[],"/Users/mdraghi/Development/code/Phase-3/Phase-3-Project/dotify/src/components/Search.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":13,"column":8,"nodeType":"48","endLine":13,"endColumn":10,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"47","line":6,"column":49,"nodeType":"48","endLine":6,"endColumn":51,"suggestions":"50"},{"ruleId":"46","severity":1,"message":"47","line":15,"column":8,"nodeType":"48","endLine":15,"endColumn":10,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setSearchToAllSongs'. Either include it or remove the dependency array. If 'setSearchToAllSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["54"],["55"],["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},{"desc":"57","fix":"59"},{"desc":"57","fix":"60"},"Update the dependencies array to be: [setSearchToAllSongs]",{"range":"61","text":"62"},{"range":"63","text":"62"},{"range":"64","text":"62"},[312,314],"[setSearchToAllSongs]",[283,285],[485,487]]